generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Player {
  id                BigInt    @id @default(autoincrement())
  username          String    @db.VarChar(20)
  email             String    @db.VarChar(50)
  password          String?   @db.VarChar(64)
  email_verified_at DateTime? @db.Timestamp(0)
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  updated_at        DateTime? @default(now()) @db.Timestamp(0)

  Lock Lock[]

  @@map("players")
}

model PersonalAccessToken {
  id             BigInt    @id @default(autoincrement())
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt
  name           String    @db.VarChar(20)
  token          String    @db.VarChar(64)
  abilities      String    @db.Text()
  last_used_at   DateTime? @db.Timestamp(0)
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @default(now()) @db.Timestamp(0)

  @@map("personal_access_tokens")
}

model LockedAction {
  id          BigInt    @id @default(autoincrement())
  name        String    @db.VarChar(50)
  description String    @db.Text()
  message     String    @db.Text()
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)

  Lock Lock[]

  @@map("locked_actions")
}

model Lock {
  id         BigInt    @id @default(autoincrement())
  player_id  BigInt
  action_id  BigInt
  reason     String    @db.Text()
  expired_at DateTime  @db.Timestamp(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  Player Player?       @relation(fields: [player_id], references: [id])
  Action LockedAction? @relation(fields: [action_id], references: [id])

  @@unique([player_id, action_id])
  @@map("locks")
}
